知识库部分  需求分析 专用知识库只能专注于特定领域，而通用知识库允许用户上传文档，大模型根据文档内 容回答问题，显然更为灵活，允许用户构建自己的个性化知识库。经过对比分析，决定 构建了通用知识库。 技术选型 采用RAG架构。 模型选型：all-MiniLM-L6-v2。该模型是基于SentenceTransformer库的预训练模型， 具有较小的参数量和较快的推理速度，适合在实时性要求较高的场景中使用。all- MiniLM-L6-v2在多个语义相似度任务上表现出色，能够有效地将文本转换为高质量的 向量表示。 检索策略：使用 Faiss 库的IndexFlatL2索引结构，通过计算问题向量与知识库中文档 向量的欧几里得距离，找到最相似的文档向量。对于检索到的文档，使用简单的关键 词匹配方法提取与问题相关的部分内容，以提高回复的相关性。 实现细节 使用all-MiniLM-L6-v2将用户输入的文本转化为向量，当知识库不为空时，使用Faiss 搜索知识库中与用户问题相关的部分将其并入输入，交予大模型处理。 KnowledgeBase 类负责管理知识库的索引和文本内容，支持添加文档、保存和加载索引 以及根据问题进行搜索。 add_document方法： 1读取 docx 文档并提取文本内容。2使用 SentenceTransformer 模 型对文本进行编码。3如果索引不存在，则创建一个 faiss.IndexFlatL2 索引。4将编码后 的向量添加到索引中，并保存索引和文本内容。 save_index_and_texts方法：使用 faiss.write_index 保存索引，将文本内容写入文本文件 load_existing_index方法：如果索引文件和文本文件存在，则使用 faiss.read_index 加载 索引，并从文本文件中读取文本内容。 search 方法：对问题进行编码。使用 faiss 索引进行搜索，找到与问题最相似的文 本。通过简单的关键词匹配，提取与问题相关的部分。 评估对比与反思 起初实现为第一次运行时会将all-MiniLM-L6-v2下载到缓存中，但遇到诸多问题。 于是改为将一个all-MiniLM-L6-v2模型放在项目文件夹中，使得性能提示不少。 不足的是对比流行的大语言模型app，此项目无法实现联网搜索，这就使得如果用 户需要大量的领域专业知识，搜索信息的工作还是要有用户自己完成，此项目可以帮 助用户分析。 
